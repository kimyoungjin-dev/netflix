[{"/Users/kimyoungjing/Desktop/netflix/src/index.js":"1","/Users/kimyoungjing/Desktop/netflix/src/Components/App.js":"2","/Users/kimyoungjing/Desktop/netflix/src/Components/Router.js":"3","/Users/kimyoungjing/Desktop/netflix/src/Components/Header.js":"4","/Users/kimyoungjing/Desktop/netflix/src/Components/GlobalStyles.js":"5","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/index.js":"6","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/index.js":"7","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/index.js":"8","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/index.js":"9","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVContainer.js":"10","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomeContainer.js":"11","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailContainer.js":"12","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchContainer.js":"13","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailPresenter.js":"14","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomePresenter.js":"15","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchPresenter.js":"16","/Users/kimyoungjing/Desktop/netflix/src/api.js":"17","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVPresenter.js":"18","/Users/kimyoungjing/Desktop/netflix/src/Components/Section.js":"19","/Users/kimyoungjing/Desktop/netflix/src/Components/Loader.js":"20","/Users/kimyoungjing/Desktop/netflix/src/Components/Massage.js":"21","/Users/kimyoungjing/Desktop/netflix/src/Components/Poster.js":"22"},{"size":206,"mtime":1613474908238,"results":"23","hashOfConfig":"24"},{"size":241,"mtime":1613466561198,"results":"25","hashOfConfig":"24"},{"size":806,"mtime":1613473872885,"results":"26","hashOfConfig":"24"},{"size":1536,"mtime":1613466718457,"results":"27","hashOfConfig":"24"},{"size":603,"mtime":1612797995024,"results":"28","hashOfConfig":"24"},{"size":76,"mtime":1612533736977,"results":"29","hashOfConfig":"24"},{"size":82,"mtime":1612533928365,"results":"30","hashOfConfig":"24"},{"size":70,"mtime":1612534258364,"results":"31","hashOfConfig":"24"},{"size":82,"mtime":1612534196967,"results":"32","hashOfConfig":"24"},{"size":1203,"mtime":1613471812433,"results":"33","hashOfConfig":"24"},{"size":1218,"mtime":1612722085034,"results":"34","hashOfConfig":"24"},{"size":1180,"mtime":1612809543375,"results":"35","hashOfConfig":"24"},{"size":1459,"mtime":1613474772398,"results":"36","hashOfConfig":"24"},{"size":10648,"mtime":1613482381483,"results":"37","hashOfConfig":"24"},{"size":2330,"mtime":1612983027732,"results":"38","hashOfConfig":"24"},{"size":3208,"mtime":1613290431685,"results":"39","hashOfConfig":"24"},{"size":1006,"mtime":1612793786240,"results":"40","hashOfConfig":"24"},{"size":2329,"mtime":1613305176304,"results":"41","hashOfConfig":"24"},{"size":790,"mtime":1612985465811,"results":"42","hashOfConfig":"24"},{"size":1049,"mtime":1613466745240,"results":"43","hashOfConfig":"24"},{"size":1302,"mtime":1612639207097,"results":"44","hashOfConfig":"24"},{"size":2476,"mtime":1612985619953,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1t49pr1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/kimyoungjing/Desktop/netflix/src/index.js",[],["93","94"],"/Users/kimyoungjing/Desktop/netflix/src/Components/App.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Router.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Header.js",["95"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"images/logo.webp\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: black;\n  z-index: 10;\n  font-size: 18px;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(8px);\n`;\n\nconst Logo = styled.div`\n  & img {\n    width: 80px;\n    height: 50px;\n    cursor: pointer;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  transition: border-bottom 0.5s ease-in-out;\n  border-bottom: 4px solid\n    ${(props) => (props.current ? \"white\" : \"transparent\")};\n`;\n\nconst SLink = styled(Link)`\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst HeaderC = ({ location: { pathname } }) => (\n  <>\n    <Header>\n      <>\n        <Link to=\"/\">\n          <Logo>\n            <img src={logo} />\n          </Logo>\n        </Link>\n        <List>\n          <Item current={pathname === \"/\"}>\n            <SLink to=\"/\">Movie</SLink>\n          </Item>\n          <Item current={pathname === \"/tv\"}>\n            <SLink to=\"/tv\">TV</SLink>\n          </Item>\n          <Item current={pathname === \"/search\"}>\n            <SLink to=\"/search\">Search</SLink>\n          </Item>\n        </List>\n      </>\n    </Header>\n  </>\n);\n\nexport default withRouter(HeaderC);\n","/Users/kimyoungjing/Desktop/netflix/src/Components/GlobalStyles.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVContainer.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomeContainer.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailContainer.js",["96","97"],"import { movieApi, tvApi } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = (props) => {\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const getDetail = async () => {\n    const {\n      history: { push },\n      match: {\n        params: { id },\n      },\n    } = props;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    const {\n      location: { pathname },\n    } = props;\n    const isMovie = pathname.includes(\"movie\");\n\n    try {\n      if (isMovie) {\n        const { data: result } = await movieApi.movieDetail(id);\n        setResult(result);\n      } else {\n        const { data: result } = await tvApi.showDetail(id);\n        setResult(result);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getDetail();\n  }, []);\n\n  return (\n    <div>\n      <DetailPresenter result={result} loading={loading} error={error} />\n    </div>\n  );\n};\n\nexport default DetailContainer;\n","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchContainer.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailPresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomePresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchPresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/api.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVPresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Section.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Loader.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Massage.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Poster.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":56,"column":13,"nodeType":"104","endLine":56,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":8,"column":17,"nodeType":"107","messageId":"108","endLine":8,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":44,"column":6,"nodeType":"111","endLine":44,"endColumn":8,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDetail'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getDetail]",{"range":"118","text":"119"},[1027,1029],"[getDetail]"]