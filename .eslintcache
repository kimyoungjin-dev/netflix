[{"/Users/kimyoungjing/Desktop/netflix/src/index.js":"1","/Users/kimyoungjing/Desktop/netflix/src/Components/App.js":"2","/Users/kimyoungjing/Desktop/netflix/src/Components/Router.js":"3","/Users/kimyoungjing/Desktop/netflix/src/Components/Header.js":"4","/Users/kimyoungjing/Desktop/netflix/src/Components/GlobalStyles.js":"5","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/index.js":"6","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/index.js":"7","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/index.js":"8","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/index.js":"9","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVContainer.js":"10","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomeContainer.js":"11","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailContainer.js":"12","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchContainer.js":"13","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailPresenter.js":"14","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomePresenter.js":"15","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchPresenter.js":"16","/Users/kimyoungjing/Desktop/netflix/src/api.js":"17","/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVPresenter.js":"18","/Users/kimyoungjing/Desktop/netflix/src/Components/Section.js":"19","/Users/kimyoungjing/Desktop/netflix/src/Components/Loader.js":"20","/Users/kimyoungjing/Desktop/netflix/src/Components/Massage.js":"21","/Users/kimyoungjing/Desktop/netflix/src/Components/Poster.js":"22"},{"size":206,"mtime":1612271953475,"results":"23","hashOfConfig":"24"},{"size":240,"mtime":1612291046284,"results":"25","hashOfConfig":"24"},{"size":800,"mtime":1612540430739,"results":"26","hashOfConfig":"24"},{"size":1537,"mtime":1612813040267,"results":"27","hashOfConfig":"24"},{"size":603,"mtime":1612797995024,"results":"28","hashOfConfig":"24"},{"size":76,"mtime":1612533736977,"results":"29","hashOfConfig":"24"},{"size":82,"mtime":1612533928365,"results":"30","hashOfConfig":"24"},{"size":70,"mtime":1612534258364,"results":"31","hashOfConfig":"24"},{"size":82,"mtime":1612534196967,"results":"32","hashOfConfig":"24"},{"size":1232,"mtime":1612724118482,"results":"33","hashOfConfig":"24"},{"size":1218,"mtime":1612722085034,"results":"34","hashOfConfig":"24"},{"size":1180,"mtime":1612809543375,"results":"35","hashOfConfig":"24"},{"size":1470,"mtime":1612639107668,"results":"36","hashOfConfig":"24"},{"size":7121,"mtime":1612819824899,"results":"37","hashOfConfig":"24"},{"size":2309,"mtime":1612808689009,"results":"38","hashOfConfig":"24"},{"size":3189,"mtime":1612809457205,"results":"39","hashOfConfig":"24"},{"size":1006,"mtime":1612793786240,"results":"40","hashOfConfig":"24"},{"size":2298,"mtime":1612798073047,"results":"41","hashOfConfig":"24"},{"size":696,"mtime":1612724521588,"results":"42","hashOfConfig":"24"},{"size":1079,"mtime":1612793258495,"results":"43","hashOfConfig":"24"},{"size":1302,"mtime":1612639207097,"results":"44","hashOfConfig":"24"},{"size":1858,"mtime":1612795581751,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1t49pr1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/Users/kimyoungjing/Desktop/netflix/src/index.js",[],["97","98"],"/Users/kimyoungjing/Desktop/netflix/src/Components/App.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Router.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Header.js",["99"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"images/logo.webp\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: black;\n  z-index: 10;\n  font-size: 13px;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(8px);\n`;\n\nconst Logo = styled.div`\n  & img {\n    width: 80px;\n    height: 50px;\n    cursor: pointer;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  transition: border-bottom 0.5s ease-in-out;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"white\" : \"transparent\")};\n`;\n\nconst SLink = styled(Link)`\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst HeaderC = ({ location: { pathname } }) => (\n  <>\n    <Header>\n      <>\n        <Link to=\"/\">\n          <Logo>\n            <img src={logo} />\n          </Logo>\n        </Link>\n        <List>\n          <Item current={pathname === \"/\"}>\n            <SLink to=\"/\">Movies</SLink>\n          </Item>\n          <Item current={pathname === \"/tv\"}>\n            <SLink to=\"/tv\">tv</SLink>\n          </Item>\n          <Item current={pathname === \"/search\"}>\n            <SLink to=\"/search\">search</SLink>\n          </Item>\n        </List>\n      </>\n    </Header>\n  </>\n);\n\nexport default withRouter(HeaderC);\n","/Users/kimyoungjing/Desktop/netflix/src/Components/GlobalStyles.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/index.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVContainer.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomeContainer.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailContainer.js",["100","101"],"import { movieApi, tvApi } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = (props) => {\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const getDetail = async () => {\n    const {\n      history: { push },\n      match: {\n        params: { id },\n      },\n    } = props;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    const {\n      location: { pathname },\n    } = props;\n    const isMovie = pathname.includes(\"movie\");\n\n    try {\n      if (isMovie) {\n        const { data: result } = await movieApi.movieDetail(id);\n        setResult(result);\n      } else {\n        const { data: result } = await tvApi.showDetail(id);\n        setResult(result);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getDetail();\n  }, []);\n\n  return (\n    <div>\n      <DetailPresenter result={result} loading={loading} error={error} />\n    </div>\n  );\n};\n\nexport default DetailContainer;\n","/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchContainer.js",["102"],"import { movieApi } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = () => {\n  const [tvResults, setTvResults] = useState(null);\n  const [movieResults, setMovieResults] = useState(null);\n  const [SearchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handdleSumbit = (event) => {\n    event.preventDefault();\n    if (SearchTerm !== \"\") {\n      SearchByTerm();\n    }\n    setSearchTerm(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSearchTerm(value);\n  };\n\n  const SearchByTerm = async () => {\n    setLoading(true);\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(SearchTerm);\n      const {\n        data: { results: tvResults },\n      } = await movieApi.search(SearchTerm);\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n    } catch (error) {\n      setError(\"Movie information cannot be loaded.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <SearchPresenter\n        onChange={onChange}\n        handdleSumbit={handdleSumbit}\n        SearchTerm={SearchTerm}\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n      />\n    </div>\n  );\n};\n\nexport default SearchContainer;\n","/Users/kimyoungjing/Desktop/netflix/src/Routes/Detail/DetailPresenter.js",["103"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Massage from \"Components/Massage\";\nimport YoutubeImage from \"images/YoutubeImage.jpeg\";\nimport { AiFillStar } from \"react-icons/ai\";\nconst Container = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  padding-left: 50px;\n  display: flex;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  height: 100vh;\n  width: 100%;\n  top: -30px;\n  left: 0;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  filter: blur(4px);\n  opacity: 0.5;\n  z-index: -1;\n`;\n\n//\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 86%;\n  margin-right: 30px;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  margin-left: 25px;\n  font-size: 18px;\n  width: 70%;\n`;\n\nconst Title = styled.h3`\n  font-size: 50px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Item = styled.span``;\n\nconst Vote = styled.span`\n  color: yellow;\n  font-size: 20px;\n  margin-left: 20px;\n`;\n\nconst DbButtion = styled.button`\n  all: unset;\n  background: #fdc830;\n  background: -webkit-linear-gradient(to right, #f37335, #fdc830);\n  background: linear-gradient(to right, #f37335, #fdc830);\n  margin-left: 10px;\n  color: black;\n  padding: 3px;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n\nconst Divider = styled.span`\n  margin: 0px 15px;\n`;\n\nconst OverView = styled.p`\n  font-size: 14px;\n  opacity: 0.6;\n  line-height: 1.5;\n`;\n\n//Center Title\nconst MovieMaker = styled.div`\n  margin: 30px 0px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  opacity: 0.8;\n  justify-content: space-between;\n  height: 15%;\n  font-style: oblique;\n`;\n\n//YouTubeContainer\nconst YouTubeContainer = styled.div`\n  display: flex;\n  width: 70%;\n  position: relative;\n  height: auto;\n  justify-content: space-between;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst YouTubeLink = styled.div`\n  height: 150px;\n  width: 200px;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n`;\n\nconst YouTubeIcon = styled.img`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  left: -100px;\n  border-radius: 30%;\n`;\n\n//Components\nconst DetailPresenter = ({ result, loading, error }) => {\n  {\n    console.log(result);\n  }\n  return (\n    <HelmetProvider>\n      {loading ? (\n        <>\n          <Helmet>\n            <title>Loading...</title>\n          </Helmet>\n          <Loader />\n        </>\n      ) : result ? (\n        <Container>\n          <Helmet>\n            <title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </title>\n          </Helmet>\n\n          <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          ></Backdrop>\n          <Content>\n            <Cover\n              bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n            />\n            <Data>\n              <Title>\n                {result.original_title\n                  ? result.original_title\n                  : result.original_name}\n              </Title>\n\n              <ItemContainer>\n                <Item>\n                  {`${\n                    result.release_date\n                      ? result.release_date.substring(0, 4)\n                      : result.first_air_date.substring(0, 4)\n                  }년`}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {`${\n                    result.runtime ? result.runtime : result.episode_run_time[0]\n                  }분`}\n                </Item>\n                <DbButtion\n                  onClick={() =>\n                    (window.location = `https://www.imdb.com/title/${\n                      result.imdb_id && result.imdb_id\n                    }`)\n                  }\n                >\n                  Preview\n                </DbButtion>\n                <Vote>\n                  {result.vote_average && result.vote_average}\n                  <AiFillStar />\n                </Vote>\n              </ItemContainer>\n\n              <OverView>{result.overview}..</OverView>\n              <MovieMaker>\n                <Item>\n                  {`Director :\n                  ${\n                    result.production_companies &&\n                    result.production_companies[0].name\n                  }`}\n                </Item>\n                <Item>\n                  {`Production place\n : ${result.production_countries && result.production_countries[0].name}`}\n                </Item>\n                <Item>\n                  {`Genres :${\n                    result.genres &&\n                    result.genres.map((genre, index) =>\n                      index === result.genres.length - 1\n                        ? genre.name\n                        : `${genre.name} / `\n                    )\n                  }`}\n                </Item>\n              </MovieMaker>\n              <YouTubeContainer>\n                <YouTubeLink\n                  bgImage={\n                    result.poster_path && result.poster_path\n                      ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                      : require(\"images/YoutubeImage.jpeg\")\n                  }\n                  onClick={() =>\n                    (window.location = `https:www.youtube.com/watch?v=${\n                      result.videos &&\n                      result.videos.results &&\n                      result.videos.results[0].key\n                    }`)\n                  }\n                ></YouTubeLink>\n\n                <YouTubeLink\n                  bgImage={\n                    result.backdrop_path && result.backdrop_path\n                      ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n                      : require(\"images/YoutubeImage.jpeg\")\n                  }\n                  onClick={() =>\n                    (window.location = `https:www.youtube.com/watch?v=${\n                      result.videos &&\n                      result.videos.results &&\n                      result.videos.results[0].key\n                    }`)\n                  }\n                >\n                  <YouTubeIcon src={YoutubeImage} />\n                </YouTubeLink>\n              </YouTubeContainer>\n            </Data>\n          </Content>\n          {error && <Massage color=\"red\" text={error} />}\n        </Container>\n      ) : null}\n    </HelmetProvider>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\nexport default DetailPresenter;\n","/Users/kimyoungjing/Desktop/netflix/src/Routes/Home/HomePresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/Search/SearchPresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/api.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Routes/TV/TVPresenter.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Section.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Loader.js",["104"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport LoadingImage from \"images/netflixLoadingBg.jpeg\";\n\nconst Container = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: black;\n  color: red;\n`;\n\nconst Loading = styled.img``;\n\nconst SpinContainer = styled.div`\n  width: 50%;\n  height: 30vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Spin = styled.span`\n  font-size: 60px;\n  animation: spin 4s linear infinite;\n  @keyframes spin {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Title = styled.span``;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Loading src={LoadingImage}></Loading>\n      <SpinContainer>\n        <Spin>\n          <FaSpinner />\n        </Spin>\n      </SpinContainer>\n    </Container>\n  );\n};\n\nexport default Loader;\n","/Users/kimyoungjing/Desktop/netflix/src/Components/Massage.js",[],"/Users/kimyoungjing/Desktop/netflix/src/Components/Poster.js",[],["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":56,"column":13,"nodeType":"113","endLine":56,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":8,"column":17,"nodeType":"116","messageId":"117","endLine":8,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":44,"column":6,"nodeType":"120","endLine":44,"endColumn":8,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":2,"column":17,"nodeType":"116","messageId":"117","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":139,"column":3,"nodeType":"125","messageId":"126","endLine":141,"endColumn":4},{"ruleId":"114","severity":1,"message":"127","line":44,"column":7,"nodeType":"116","messageId":"117","endLine":44,"endColumn":12},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDetail'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Title' is assigned a value but never used.",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [getDetail]",{"range":"135","text":"136"},[1027,1029],"[getDetail]"]